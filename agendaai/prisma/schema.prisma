// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String   @id @default(cuid())
  name      String
  users     User[]
  queues    Queue[]
  createdAt DateTime @default(now())
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String   // Vamos armazenar o hash, não a senha em texto plano
  companyId String
  company   Company  @relation(fields: [companyId], references: [id])
  createdAt DateTime @default(now())
}

model Queue {
  id            String   @id @default(cuid())
  name          String
  prefix        String   @default("A")
  currentNumber Int      @default(0) // Para controlar o número da senha
  companyId     String
  company       Company  @relation(fields: [companyId], references: [id])
  tickets       Ticket[]
  createdAt     DateTime @default(now())
}

model Ticket {
  id            String   @id @default(cuid())
  displayNumber String   // Ex: "A001"
  status        String   @default("WAITING") // Estados: WAITING, IN_PROGRESS, DONE
  queueId       String
  queue         Queue    @relation(fields: [queueId], references: [id])
  createdAt     DateTime @default(now())
  calledAt      DateTime? // Opcional: quando a senha foi chamada
  finishedAt    DateTime? // Opcional: quando o atendimento foi finalizado
}
